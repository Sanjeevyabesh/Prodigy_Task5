{"version":3,"sources":["script.js"],"names":["onScanSuccess","decodedText","decodedResult","resultElement","document","getElementById","actionBtn","textContent","isValidURL","style","display","onclick","window","open","onScanFailure","error","console","warn","string","URL","_","html5QrCode","Html5Qrcode","start","facingMode","fps","qrbox","width","height","err"],"mappings":";;AAAA,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,aAApC,EAAmD;AAC/C,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAtB;AACA,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB,CAF+C,CAI/C;;AACAF,EAAAA,aAAa,CAACI,WAAd,GAA4BN,WAA5B,CAL+C,CAO/C;;AACA,MAAIO,UAAU,CAACP,WAAD,CAAd,EAA6B;AAC3BK,IAAAA,SAAS,CAACG,KAAV,CAAgBC,OAAhB,GAA0B,cAA1B;;AACAJ,IAAAA,SAAS,CAACK,OAAV,GAAoB,YAAM;AACxBC,MAAAA,MAAM,CAACC,IAAP,CAAYZ,WAAZ,EAAyB,QAAzB;AACD,KAFD;AAGD,GALD,MAKO;AACLK,IAAAA,SAAS,CAACG,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACD;AACF;;AAED,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACAC,EAAAA,OAAO,CAACC,IAAR,+BAAoCF,KAApC;AACD;;AAED,SAASP,UAAT,CAAoBU,MAApB,EAA4B;AAC1B,MAAI;AACF,QAAIC,GAAJ,CAAQD,MAAR;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,C,CAED;;;AACA,IAAMC,WAAW,GAAG,IAAIC,WAAJ,CAAgB,WAAhB,CAApB;AAEAD,WAAW,CAACE,KAAZ,CACE;AAAEC,EAAAA,UAAU,EAAE;AAAd,CADF,EACiC;AAC/B;AACEC,EAAAA,GAAG,EAAE,EADP;AACc;AACZC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAFT,CAEsC;;AAFtC,CAFF,EAME5B,aANF,EAOEc,aAPF,WAQQ,UAAAe,GAAG,EAAI;AACbb,EAAAA,OAAO,CAACD,KAAR,6CAAmDc,GAAnD;AACD,CAVD","sourcesContent":["function onScanSuccess(decodedText, decodedResult) {\r\n    const resultElement = document.getElementById(\"result\");\r\n    const actionBtn = document.getElementById(\"actionBtn\");\r\n  \r\n    // Display the decoded content\r\n    resultElement.textContent = decodedText;\r\n    \r\n    // Show the action button if content is a URL\r\n    if (isValidURL(decodedText)) {\r\n      actionBtn.style.display = \"inline-block\";\r\n      actionBtn.onclick = () => {\r\n        window.open(decodedText, \"_blank\");\r\n      };\r\n    } else {\r\n      actionBtn.style.display = \"none\";\r\n    }\r\n  }\r\n  \r\n  function onScanFailure(error) {\r\n    // Handle scan failure, possibly update UI with error info\r\n    console.warn(`QR code scan error: ${error}`);\r\n  }\r\n  \r\n  function isValidURL(string) {\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  // Create a QR code scanner\r\n  const html5QrCode = new Html5Qrcode(\"qr-reader\");\r\n  \r\n  html5QrCode.start(\r\n    { facingMode: \"environment\" }, // Use back camera for scanning\r\n    {\r\n      fps: 10,    // Set a higher fps for a more responsive scanner\r\n      qrbox: { width: 250, height: 250 }  // Define scanning area\r\n    },\r\n    onScanSuccess,\r\n    onScanFailure\r\n  ).catch(err => {\r\n    console.error(`Failed to start QR code scanning: ${err}`);\r\n  });\r\n  "],"file":"script.dev.js"}